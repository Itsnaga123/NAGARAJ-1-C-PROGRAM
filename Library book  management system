Black Friday Sale @Courses
DSA Course
DSA
Interview Problems on Tree
Practice Tree
MCQs on Tree
Tutorial on Tree
Types of Trees
Basic operations
Tree Traversal
Binary Tree
Complete Binary Tree
Ternary Tree
Binary Search Tree
Red-Black Tree
AVL Tree
Full Binary Tree
B-Tree
Advantages & Disadvantages
▲
Open In App
E -Library Management System
Last Updated : 20 Feb, 2024
In this article, we will discuss the approach to creating an E-Library Management System where the user has the following options:

Add book information.
Display book information.
To list all books of a given author.
To list the count of books in the library.
E -Library Management System
E -Library Management System

Functionalities Required:
If the user tries to add a book then the user must have to provide the below specific Information about the book:
Enter Book Name:
Enter Author Name:
Enter Pages:
Enter Price:
When the user tries to display all books of a particular author then the user must have to enter the name of the author:
Enter the author’s name:
The E-Library Management System must be also capable of counting all the books available in the library.

Note: Follow given link to build a Web application on Library Management System.


Below is the program to implement the E-Library Management System:

C++
// C++ code addition 
 
#include <iostream>
#include <string>
 
using namespace std;
 
// Create Structure of Library
struct library {
    string book_name;
    string author;
    int pages;
    float price;
};
 
// Driver Code
int main()
{
    // Create an array of structs
    library lib[100];
 
    string ar_nm, bk_nm;
 
    // Keep the track of the number of
    // of books available in the library
    int i, input, count;
 
    i = input = count = 0;
 
    // Iterate the loop
    while (input != 5) {
 
        cout << "\n\n********######"
             << "WELCOME TO E-LIBRARY "
             << "#####********\n";
        cout << "\n\n1. Add book information\n2. Display book information\n";
        cout << "3. List all books of given author\n";
        cout << "4. List the count of books in the library\n";
        cout << "5. Exit\n";
 
        // Enter the book details
        cout << "\n\nEnter one of the above: ";
        cin >> input;
 
        // Process the input
        switch (input) {
 
        // Add book
        case 1:
 
            cout << "Enter book name = ";
            cin >> lib[i].book_name;
 
            cout << "Enter author name = ";
            cin >> lib[i].author;
 
            cout << "Enter pages = ";
            cin >> lib[i].pages;
 
            cout << "Enter price = ";
            cin >> lib[i].price;
            count++;
 
            break;
 
        // Print book information
        case 2:
            cout << "you have entered the following information\n";
            for (i = 0; i < count; i++) {
 
                cout << "book name = " << lib[i].book_name;
                cout << "\t author name = " << lib[i].author;
                cout << "\t  pages = " << lib[i].pages;
                cout << "\t  price = " << lib[i].price << endl;
            }
            break;
 
        // Take the author name as input
        case 3:
            cout << "Enter author name : ";
            cin >> ar_nm;
            for (i = 0; i < count; i++) {
 
                if (ar_nm == lib[i].author)
                    cout << lib[i].book_name << " " << lib[i].author << " " << lib[i].pages << " " << lib[i].price << endl;
            }
            break;
 
        // Print total count
        case 4:
            cout << "\n No of books in library : " << count << endl;
            break;
        case 5:
            exit(0);
        }
    }
    return 0;
}
 
// The code is contributed by Nidhi goel.
C
